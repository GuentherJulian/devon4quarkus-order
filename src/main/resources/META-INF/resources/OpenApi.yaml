openapi: 3.0.0
info:
  title: Order Service REST API Documentation
  version: 1.0.0-SNAPSHOT
  description: This documentation describes the REST API of the order service
  contact:
    name: devon4j support
    url: https://devonfw.com
    email: icsddevonfwsupport.apps2@capgemini.com
  license:
    name: Apache License 2.0
    url: https://github.com/devonfw-sample/devon4quarkus-order/blob/master/LICENSE
    
servers:
  - url: $services.host:8081//
    
paths:
  /ordermanagement/v1/order/:
    post:
      description: Create a new order
      operationId: post__
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewOrderDto'
      responses:
        '204':
          description: No content

  /ordermanagement/v1/order/edit-status/{id}/{status}:
    put:
      description: Update the status of a given order
      operationId: put__edit-status__id___status_
      parameters:
        - name: id
          in: path
          description: the id of the order
          required: true
          schema:
            $ref: '#/components/schemas/Long'
        - name: status
          in: path
          description: the new status
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content

  /ordermanagement/v1/order/item/{id}:
    get:
      description: Get items belonging to the order
      operationId: get__item__id_
      parameters:
        - name: id
          in: path
          description: 
          required: true
          schema:
            $ref: '#/components/schemas/Long'
      responses:
        '200':
          description: the items belonging to the order with the given id
          content:
            application/json: 
              schema: 
                $ref: '#/components/schemas/Page'

  /ordermanagement/v1/order/search:
    post:
      description: Search orders based on search criteria
      operationId: post__search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderSearchCriteriaDto'
      responses:
        '200':
          description: the orders that match the search criteria
          content:
            application/json: 
              schema: 
                $ref: '#/components/schemas/Page'

  /ordermanagement/v1/order/{id}:
    delete:
      description: Delete an order with the given order id
      operationId: delete___id_
      parameters:
        - name: id
          in: path
          description: the id of the order to delete
          required: true
          schema:
            $ref: '#/components/schemas/Long'
      responses:
        '204':
          description: No content

    get:
      description: Get an order by its id
      operationId: get___id_
      parameters:
        - name: id
          in: path
          description: 
          required: true
          schema:
            $ref: '#/components/schemas/Long'
      responses:
        '200':
          description: the order with the given id
          content:
            application/json: 
              schema: 
                $ref: '#/components/schemas/OrderDto'

components:
  schemas:
    NewOrderDto:
      type: object
      properties:
        orderedProductIds:
          type: array
          items:
            $ref: '#/components/schemas/Long'
        paymentDate:
          $ref: '#/components/schemas/Instant'
    Instant:
      type: object
      properties:
        seconds:
          type: integer
        nanos:
          type: integer
    Long:
      type: object
      properties:
        value:
          type: integer
    Page:
      type: object
      properties:
    OrderDto:
      type: object
      properties:
        price:
          $ref: '#/components/schemas/BigDecimal'
        id:
          $ref: '#/components/schemas/Long'
        creationDate:
          $ref: '#/components/schemas/Instant'
        paymentDate:
          $ref: '#/components/schemas/Instant'
        status:
          $ref: '#/components/schemas/OrderStatus'
    OrderStatus:
      type: object
      properties:
        name:
          type: string
        ordinal:
          type: integer
    BigDecimal:
      type: object
      properties:
        intVal:
          $ref: '#/components/schemas/BigInteger'
        precision:
          type: integer
        stringCache:
          type: string
        scale:
          type: integer
        intCompact:
          type: integer
    BigInteger:
      type: object
      properties:
        signum:
          type: integer
        lowestSetBitPlusTwo:
          type: integer
        firstNonzeroIntNumPlusTwo:
          type: integer
        mag:
          type: array
          items:
            type: integer
        bitLengthPlusOne:
          type: integer
        bitCountPlusOne:
          type: integer
    OrderSearchCriteriaDto:
      type: object
      properties:
        priceMin:
          $ref: '#/components/schemas/BigDecimal'
        priceMax:
          $ref: '#/components/schemas/BigDecimal'
        pageable:
          $ref: '#/components/schemas/Pageable'
        determineTotal:
          type: boolean
    Pageable:
      type: object
      properties:

